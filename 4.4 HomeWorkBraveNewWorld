using System;
using System.IO;

namespace HMBraveNewWorld
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;

            int sumHeart = 0;
            bool isPlaing = true;
            char symbolHeart = '♥';
            char[,] map =
             {
                {'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                {'#',' ','#','♥','#','#',' ','#',' ','#','#','♥',' ','#','#' },
                {'#',' ',' ',' ',' ',' ','#',' ',' ',' ','#','#',' ','♥','#' },
                {'#','#',' ','#','#',' ','#',' ','#',' ',' ',' ',' ','#','#' },
                {'#',' ',' ','♥','#',' ',' ',' ','#',' ','♥','#',' ',' ','#' },
                {'#','#',' ',' ','#','♥','#','♥',' ','#','#','#',' ',' ','#' },
                {'#',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ','#','#' },
                {'#','♥','#',' ','#','♥',' ','#','♥','#',' ',' ',' ',' ','#' },
                {'#',' ',' ','#','♥','#',' ','♥','#',' ','♥','#','#',' ','#' },
                {'#','#',' ',' ',' ',' ',' ','#',' ',' ','#','#','#','♥','#' },
                {'#',' ','#','#',' ','♥','#',' ',' ',' ',' ',' ',' ','#','#' },
                {'#','♥',' ',' ',' ','#','#',' ','#',' ','♥','#',' ',' ','#' },
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','_','#' },
            };

            Console.SetCursorPosition(0, 15);
            Console.WriteLine($"Пройди лабиринт! Собери как можно больше {symbolHeart}");
            Console.SetCursorPosition(0, 0);
            int userPositionX = 1;
            int userPositionY = 0;

            while (isPlaing)
            {
                DrawMap(map);

                DrawPlayer(userPositionX, userPositionY);

                MovePlayer(map, ref userPositionY, ref userPositionX);

                ToCheckingPoints(map, ref userPositionY, ref userPositionX, ref sumHeart, ref isPlaing, symbolHeart);
            }
        }

        static void ToCheckingPoints(char[,] map, ref int userPositionY, ref int userPositionX, ref int sumHeart, ref bool isPlaing, char symbolHeart)
        {
            char symbolEndGame = '_';

            if (map[userPositionY, userPositionX] == symbolHeart)
            {
                map[userPositionY, userPositionX] = ' ';

                sumHeart += 1;
            }
            else if (map[userPositionY, userPositionX] == symbolEndGame)
            {
                Console.Clear();
                Console.WriteLine($"Лабирин пройден!!! Собрано {sumHeart} {symbolHeart}");
                isPlaing = false;
            }
        }

        static void MovePlayer(char[,] map, ref int userPositionY, ref int userPositionX)
        {
            char symbolWall = '#';
            ConsoleKeyInfo direction = Console.ReadKey();
            ConsoleKey directionUp = ConsoleKey.UpArrow;
            ConsoleKey directionDown = ConsoleKey.DownArrow;
            ConsoleKey directionLeft = ConsoleKey.LeftArrow;
            ConsoleKey directionRight = ConsoleKey.RightArrow;

            if (direction.Key == directionUp && map[userPositionY - 1, userPositionX] != symbolWall)
            {
                userPositionY--;
            }
            else if (direction.Key == directionDown && map[userPositionY + 1, userPositionX] != symbolWall)
            {
                userPositionY++;
            }
            else if (direction.Key == directionLeft && map[userPositionY, userPositionX - 1] != symbolWall)
            {
                userPositionX--;
            }
            else if (direction.Key == directionRight && map[userPositionY, userPositionX + 1] != symbolWall)
            {
                userPositionX++;
            }
        }

        static void DrawMap(char[,] map)
        {
            Console.SetCursorPosition(0, 0);

            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }

                Console.WriteLine();
            }
        }

        static void DrawPlayer(int userPositionX, int userPositionY)
        {
            string user = "☻";
            Console.SetCursorPosition(userPositionX, userPositionY);
            Console.Write(user);
        }
    }
}
