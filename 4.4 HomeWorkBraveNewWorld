
using System;

namespace HMBraveNewWorld
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;

            int sumHeart = 0;
            bool isPlaing = true;
            char[,] map =
             {
                {'#',' ','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                {'#',' ','#','♥','#','#',' ','#',' ','#','#','♥',' ','#','#' },
                {'#',' ',' ',' ',' ',' ','#',' ',' ',' ','#','#',' ','♥','#' },
                {'#','#',' ','#','#',' ','#',' ','#',' ',' ',' ',' ','#','#' },
                {'#',' ',' ','♥','#',' ',' ',' ','#',' ','♥','#',' ',' ','#' },
                {'#','#',' ',' ','#','♥','#','♥',' ','#','#','#',' ',' ','#' },
                {'#',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ','#','#' },
                {'#','♥','#',' ','#','♥',' ','#','♥','#',' ',' ',' ',' ','#' },
                {'#',' ',' ','#','♥','#',' ','♥','#',' ','♥','#','#',' ','#' },
                {'#','#',' ',' ',' ',' ',' ','#',' ',' ','#','#','#','♥','#' },
                {'#',' ','#','#',' ','♥','#',' ',' ',' ',' ',' ',' ','#','#' },
                {'#','♥',' ',' ',' ','#','#',' ','#',' ','♥','#',' ',' ','#' },
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','_','#' },
            };

            Console.SetCursorPosition(0, 15);
            Console.WriteLine("Пройди лабиринт! Собери как можно больше ♥");
            Console.SetCursorPosition(0, 0);
            int userPositionX = 1;
            int userPositionY = 0;

            while (isPlaing)
            {
                DrawMap(map);

                DrawPlayer(userPositionX, userPositionY);

                MovePlayer(map, userPositionY, userPositionX);

                if (map[userPositionY, userPositionX] == '♥')
                {
                    map[userPositionY, userPositionX] = ' ';

                    sumHeart += 1;
                }
                else if (map[userPositionY, userPositionX] == '_')
                {
                    Console.Clear();
                    Console.WriteLine($"Лабирин пройден!!! Собрано {sumHeart} ♥");
                    isPlaing = false;
                }
            }
        }

        static void MovePlayer(char[,] map, int userPositionY, int userPositionX)
        {
            ConsoleKeyInfo charKey = Console.ReadKey();

            switch (charKey.Key)
            {
                case ConsoleKey.UpArrow:
                    MoveUp(map, userPositionY, userPositionX);
                    break;
                case ConsoleKey.DownArrow:
                    MoveDown(map, userPositionY, userPositionX);
                    break;
                case ConsoleKey.LeftArrow:
                    MoveLeft(map, userPositionY, userPositionX);
                    break;
                case ConsoleKey.RightArrow:
                    MoveRight(map, userPositionY, userPositionX);
                    break;
            }
        }

        static void MoveUp(char[,] map, int userPositionY, int userPositionX)
        {
            if (map[userPositionY - 1, userPositionX] != '#')
            {
                userPositionY--;
            }
        }

        static void MoveDown(char[,] map, int userPositionY, int userPositionX)
        {
            if (map[userPositionY + 1, userPositionX] != '#')
            {
                userPositionY++;
            }
        }

        static void MoveLeft(char[,] map, int userPositionY, int userPositionX)
        {
            if (map[userPositionY, userPositionX - 1] != '#')
            {
                userPositionX--;
            }
        }

        static void MoveRight(char[,] map, int userPositionY, int userPositionX)
        {
            if (map[userPositionY, userPositionX + 1] != '#')
            {
                userPositionX++;
            }                
        }

        static void DrawMap(char[,] map)
        {
            Console.SetCursorPosition(0, 0);

            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }

                Console.WriteLine();
            }
        }

        static void DrawPlayer(int userPositionX, int userPositionY)
        {
            Console.SetCursorPosition(userPositionX, userPositionY);
            Console.Write('☻');
        }
    }
}
